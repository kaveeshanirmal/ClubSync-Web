name: Deploy Next.js to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t nextjs-app .

      - name: Create env file for container
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env.production
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env.production
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env.production
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env.production
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env.production
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env.production
      
      - name: List build files
        run: ls -lah
        
      - name: Save Docker image
        run: docker save nextjs-app | gzip > nextjs-app.tar.gz

      - name: Confirm saved image exists
        run: ls -lah nextjs-app.tar.gz

      - name: Copy Docker image & env to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            nextjs-app.tar.gz
            .env.production
          target: /home/${{ secrets.EC2_USER }}/

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker stop nextjs-app || true
            docker rm nextjs-app || true
            docker load -i nextjs-app.tar.gz
            docker run -d --name nextjs-app --env-file .env.production -p 3000:3000 nextjs-app
            sudo systemctl restart nginx
